{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","res","json","newMonsters","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUAIaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBACIC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BACHC,IAAI,YAER,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,OAASP,EAAMG,QAAQI,YCLpCC,G,MAAW,SAACR,GAAD,OACpB,qBAAKC,UAAS,YAAd,SACKD,EAAMS,SAASC,KAAI,SAACP,GAAD,OAChB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCJlBO,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC4CHG,G,wDA9CX,aAAe,IAAD,8BACV,gBAqBJH,aAAe,SAACI,GACZ,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SArBtC,EAAKC,MAAQ,CACTb,SAAU,CACN,CAAEH,KAAM,eAAgBF,GAAI,MAC5B,CAAEE,KAAM,UAAWF,GAAI,MACvB,CAAEE,KAAM,SAAUF,GAAI,OAE1Be,YAAa,IARP,E,qDAYd,WAAqB,IAAD,OAChBI,MAAM,8CACDC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACH,EAAKT,SAAS,CACVT,SAAS,GAAD,mBAAM,EAAKa,MAAMb,UAAjB,YAA8BkB,W,oBAStD,WAAU,IAAD,EAC6BC,KAAKN,MAA/Bb,EADH,EACGA,SAAUU,EADb,EACaA,YAEZU,EAAmBpB,EAASqB,QAAO,SAAC3B,GAAD,OACrCA,EAAQG,KAAKyB,cAAcC,SAASb,EAAYY,kBAGpD,OACI,sBAAK9B,UAAU,MAAf,UACI,kDACA,cAAC,EAAD,CACIW,YAAY,kBACZC,aAAce,KAAKf,eAEvB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAzClBI,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0005620e.chunk.js","sourcesContent":["import React from \"react\";\r\n//Styles\r\nimport \"./card.styles.css\";\r\n\r\nexport const Card = (props) => (\r\n    <div className=\"card-container\">\r\n        <img\r\n            src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n            alt=\"monster\"\r\n        />\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email && props.monster.email}</p>\r\n    </div>\r\n);\r\n","import React from \"react\";\r\nimport { Card } from \"../card/card.component\";\r\n\r\n//Styles\r\nimport \"./card-list.styles.css\";\r\n\r\nexport const CardList = (props) => (\r\n    <div className={`card-list`}>\r\n        {props.monsters.map((monster) => (\r\n            <Card key={monster.id} monster={monster} />\r\n        ))}\r\n    </div>\r\n);\r\n","import React from \"react\";\r\n\r\n//Styles\r\nimport \"./search-box.styles.css\";\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input\r\n        className=\"search\"\r\n        type=\"search\"\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n    />\r\n);\r\n","import { React, Component } from \"react\";\n\nimport { CardList } from \"./components/card-list/card-list.component.jsx\";\nimport { SearchBox } from \"./components/search-box/search-box.component.jsx\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            monsters: [\n                { name: \"Frankenstein\", id: \"12\" },\n                { name: \"Dracula\", id: \"13\" },\n                { name: \"Zombie\", id: \"14\" },\n            ],\n            searchField: \"\",\n        };\n    }\n\n    componentDidMount() {\n        fetch(`https://jsonplaceholder.typicode.com/users`)\n            .then((res) => res.json())\n            .then((newMonsters) => {\n                this.setState({\n                    monsters: [...this.state.monsters, ...newMonsters],\n                });\n            });\n    }\n\n    handleChange = (e) => {\n        this.setState({ searchField: e.target.value });\n    };\n\n    render() {\n        const { monsters, searchField } = this.state;\n\n        const filteredMonsters = monsters.filter((monster) =>\n            monster.name.toLowerCase().includes(searchField.toLowerCase())\n        );\n\n        return (\n            <div className=\"App\">\n                <h1>Monsters Rodolex</h1>\n                <SearchBox\n                    placeholder=\"search monsters\"\n                    handleChange={this.handleChange}\n                />\n                <CardList monsters={filteredMonsters} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}